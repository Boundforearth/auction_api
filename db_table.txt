SQL used to create the database tables

DROP TABLE IF EXISTS Bids;
DROP TABLE IF EXISTS Watching;
DROP TABLE IF EXISTS Feedback;
DROP TABLE IF EXISTS LiveAuctions;
DROP TABLE IF EXISTS Auctions;
DROP TABLE IF EXISTS Categories;
DROP TABLE IF EXISTS Users;

CREATE TABLE Users (
	user_id   SERIAL NOT NULL PRIMARY KEY,
	username  VARCHAR(30) NOT NULL,
	email     VARCHAR(100) NOT NULL,
	password  VARCHAR(128) NOT NULL,
	feedback_score INTEGER
);

CREATE TABLE Categories (
	category_id SERIAL NOT NULL PRIMARY KEY,
	category VARCHAR(30)
);

CREATE TABLE Auctions (
	auction_id	SERIAL NOT NULL PRIMARY KEY,
	user_id INTEGER,
	title VARCHAR(256) NOT NULL,
	highest_bidder INTEGER,
	category_id INTEGER,
	image_path VARCHAR(128),
	description VARCHAR(1000),
	start_date  TIMESTAMP NOT NULL,
	end_date TIMESTAMP NOT NULL,
	start_price FLOAT8 NOT NULL,
	current_price FLOAT8 NOT NULL,
	end_price FLOAT8,
	bid_count INTEGER,
	highest_bid FLOAT8,
	CONSTRAINT userId FOREIGN KEY(user_id)
		REFERENCES Users (user_id)
		ON UPDATE CASCADE ON DELETE SET NULL,
	CONSTRAINT bidderId FOREIGN KEY (highest_bidder)
		REFERENCES Users (user_id)
		ON UPDATE CASCADE ON DELETE SET NULL,
	CONSTRAINT categoryName FOREIGN KEY (category_id)
		REFERENCES Categories (category_id)
		ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE LiveAuctions (
	auction_id INTEGER NOT NULL,
	user_id INTEGER,
	category_id INTEGER,
	title VARCHAR(256) NOT NULL,
	image_path VARCHAR(128),
	highest_bidder INTEGER,
	current_price FLOAT8,
	end_date TIMESTAMP,
	CONSTRAINT auctionId FOREIGN KEY(auction_id)
		REFERENCES Auctions (auction_id),
	CONSTRAINT bidderId FOREIGN KEY (highest_bidder)
		REFERENCES Users (user_id)
		ON UPDATE CASCADE ON DELETE SET NULL,
	CONSTRAINT userId FOREIGN KEY (user_id)
		REFERENCES Users (user_id)
		ON UPDATE CASCADE ON DELETE SET NULL,
	CONSTRAINT categoryId FOREIGN KEY (category_id)
		REFERENCES Categories (category_id)
		ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE Bids (
	bid_id SERIAL NOT NULL PRIMARY KEY,
	auction_id INTEGER NOT NULL,
	user_id INTEGER,
	price FLOAT8 NOT NULL,
	bid_time DATE NOT NULL,
	CONSTRAINT userId FOREIGN KEY(user_id)
		REFERENCES Users (user_id)
		ON UPDATE CASCADE ON DELETE SET NULL,
	CONSTRAINT auctionId FOREIGN KEY (auction_id)
		REFERENCES Auctions (auction_id)
		ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE Feedback (
	user_id INTEGER,
	poster_id INTEGER,
	auction_id INTEGER NOT NULL,
	feedback_score INTEGER NOT NULL,
	feedback VARCHAR(250),
	CONSTRAINT userId FOREIGN KEY(user_id)
		REFERENCES Users (user_id)
		ON UPDATE CASCADE ON DELETE SET NULL,
	CONSTRAINT auctionId FOREIGN KEY (auction_id)
		REFERENCES Auctions (auction_id),
	CONSTRAINT posterId FOREIGN KEY(user_id)
		REFERENCES Users (user_id)	
		ON UPDATE CASCADE ON DELETE SET NULL
);

CREATE TABLE Watching (
	watching_id SERIAL NOT NULL PRIMARY KEY,
	user_id INTEGER,
	auction_id INTEGER,
	CONSTRAINT userId FOREIGN KEY(user_id)
		REFERENCES Users (user_id)
		ON UPDATE CASCADE ON DELETE SET NULL,
	CONSTRAINT auctionId FOREIGN KEY (auction_id)
		REFERENCES Auctions (auction_id)
		ON UPDATE CASCADE ON DELETE SET NULL
)